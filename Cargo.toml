[package]
name = "bitwarden_rs"
version = "1.19.0"
authors = ["Daniel Garc√≠a <dani-garcia@users.noreply.github.com>"]
edition = "2018"

repository = "https://github.com/dani-garcia/bitwarden_rs"
readme = "README.md"
license = "GPL-3.0-only"
publish = false
build = "build.rs"
description = "foo"

[features]
# Empty to keep compatibility, prefer to set USE_SYSLOG=true
enable_syslog = []
mysql = ["diesel/mysql", "diesel_migrations/mysql"]
postgresql = ["diesel/postgres", "diesel_migrations/postgres"]
sqlite = ["diesel/sqlite", "diesel_migrations/sqlite", "libsqlite3-sys"]
# Enable to use a vendored and statically linked openssl
vendored_openssl = ["openssl/vendored"]

# Enable unstable features, requires nightly
# Currently only used to enable rusts official ip support
unstable = []

[target."cfg(not(windows))".dependencies]
syslog = "4.0.1"

[dependencies]
# Web framework for nightly with a focus on ease-of-use, expressibility, and speed.
rocket = { version = "0.5.0-dev", features = ["tls"], default-features = false }
rocket_contrib = "0.5.0-dev"

# HTTP client
reqwest = { version = "0.11.0", features = ["blocking", "json"] }

# multipart/form-data support
multipart = { version = "0.17.1", features = ["server"], default-features = false }

# WebSockets library
ws = { version = "0.10.0", package = "parity-ws" }

# MessagePack library
rmpv = "0.4.7"

# Concurrent hashmap implementation
chashmap = "2.2.2"

# A generic serialization/deserialization framework
serde = { version = "1.0.123", features = ["derive"] }
serde_json = "1.0.62"

# Logging
log = "0.4.14"
fern = { version = "0.6.0", features = ["syslog-4"] }

# A safe, extensible ORM and Query builder
diesel = { version = "1.4.5", features = [ "chrono", "r2d2"] }
diesel_migrations = "1.4.0"

# Bundled SQLite
libsqlite3-sys = { version = "0.18.0", features = ["bundled"], optional = true }

# Crypto-related libraries
rand = "0.8.3"
ring = "0.16.20"

# UUID generation
uuid = { version = "0.8.2", features = ["v4"] }

# Date and time libraries
chrono = "0.4.19"
chrono-tz = "0.5.3"
time = "0.2.25"

# TOTP library
oath = "0.10.2"

# Data encoding library
data-encoding = "2.3.2"

# JWT library
jsonwebtoken = "7.2.0"

# U2F library
u2f = "0.2.0"

# Yubico Library
yubico = { version = "0.9.2", features = ["online-tokio"], default-features = false }

# A `dotenv` implementation for Rust
dotenv = { version = "0.15.0", default-features = false }

# Lazy initialization
once_cell = "1.5.2"

# Numerical libraries
num-traits = "0.2.14"
num-derive = "0.3.3"

# Email libraries
lettre = { version = "0.10.0-alpha.5", features = ["smtp-transport", "builder", "serde", "native-tls", "hostname", "tracing"], default-features = false }
newline-converter = "0.1.0"

# Template library
handlebars = { version = "3.5.2", features = ["dir_source"] }

# For favicon extraction from main website
soup = "0.5.0"
regex = { version = "1.4.3", features = ["std", "perf"], default-features = false }
data-url = "0.1.0"

# Used by U2F, JWT and Postgres
openssl = "0.10.32"

# URL encoding library
percent-encoding = "2.1.0"
# Punycode conversion
idna = "0.2.1"

# CLI argument parsing
structopt = "0.3.21"

# Logging panics to logfile instead stderr only
backtrace = "0.3.56"

# Macro ident concatenation
paste = "1.0.4"

[patch.crates-io]
# Use newest ring
rocket = { git = 'https://github.com/SergioBenitez/Rocket', rev = '263e39b5b429de1913ce7e3036575a7b4d88b6d7' }
rocket_contrib = { git = 'https://github.com/SergioBenitez/Rocket', rev = '263e39b5b429de1913ce7e3036575a7b4d88b6d7' }

# For favicon extraction from main website
data-url = { git = 'https://github.com/servo/rust-url', package="data-url", rev = '540ede02d0771824c0c80ff9f57fe8eff38b1291' }

[package.metadata.rpm.cargo]
buildflags = ["--release", "--features=sqlite"]

[package.metadata.rpm.targets]
bitwarden_rs = { path = "/usr/bin/bitwarden_rs" }

[package.metadata.rpm.files]
"bitwarden_rs.service" = { path = "/usr/lib/systemd/system/bitwarden_rs.service" }
